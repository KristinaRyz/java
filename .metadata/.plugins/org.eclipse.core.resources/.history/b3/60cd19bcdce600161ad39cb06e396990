package model;

public class ObjectArray {
	private static final int DEFAULT_CAPACITY = 10;
	private static final double ENLARGE_COEFF = 1.57; // увеличить коэффициент
	
	private Object[] arr;
	private int capacity;
	private int size;
	
	public ObjectArray(){
		capacity = DEFAULT_CAPACITY;
		arr = new Object[capacity];
		size = 0;
	}
	
	public ObjectArray(int cap){
		capacity = cap;
		arr = new Object[capacity];
		size = 0;
	}
	
	public void add(Object obj){
		
		if(size == capacity) enlargeArray();
		arr[size++] = obj;
	}

	private void enlargeArray() {
		int newCapacity = (int)(capacity * ENLARGE_COEFF) + 1;
		Object[] newArray = new Object[newCapacity];
		for(int i = 0; i < capacity; i++)newArray[i] = arr[i];
		arr = newArray;
		capacity = newCapacity;
	}
	public void display(){
		if(isEmpty()){
			System.out.println("OA is Empty");
			return;
		}
		for(int i=0; i<size; i++)System.out.println(arr[i]);
	}
	public int size(){
		return size;
	}
	public Object get(int index){
		if(index<0 || index>=size)return null;
		return arr[index];}
	public Object removeLast(){
		return isEmpty() ? null : arr[(size--)-1];//тернарный оператор
	}
	public boolean isEmpty(){return size ==0;}
	
	public Object removeFirst(){
		if(isEmpty())return null;
		Object removed = arr[0];
		for(int i=0; i<size-1; i++)arr[i] = arr[i+1];
		size--;
		return removed;
	}
		/* Домашнее задание
		 * 1 public Object remove(int index){
		 * 			return index;}		
		2 *переписать for(int i=0; i<size-1; i++)
		3 public boolean addTOIndex(Object obj, int index){}
		4 ** public void merge(ObjectArray oa){}соединить два объектаж 
		*/
		public void addToHead(Object obj){
			if(size == capacity)enlargeArray();
			for(int i = size; i>0; i--)arr[i] = arr[i-1];
			arr[0] = obj;
			size++;
		}
}
